using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace WialonServer.Services
{
    class WialonParsingService
    {
        List<byte> data = new List<byte>
        {0x74,0x00,0x00,0x00,0x33,0x35,0x33,0x39,0x37,0x36,0x30,0x31,0x33,0x34,0x34,0x35,0x34,0x38,0x35,0x00,0x4B,0x0B, 0xFB,0x70,0x00,0x00,0x00,0x03,0x0B,
            0xBB,0x00,0x00,0x00,0x27,0x01,0x02,0x70,0x6F,0x73,0x69,0x6E,0x66,0x6F ,0x00,0xA0,0x27,0xAF,0xDF,0x5D,0x98,0x48,0x40,0x3A,0xC7,0x25,0x33,0x83,
            0xDD,0x4B,0x40,0x00,0x00,0x00,0x00,0x00,0x80,0x5A,0x40,0x00,0x36,0x01,0x46,0x0B,0x0B,0xBB,0x00,0x00,0x00,0x12,0x00,0x04,0x70,
            77,0x72,0x5F,0x65,0x78,0x74,0x00,0x2B,0x87,0x16,0xD9,0xCE,0x97,0x3B,0x40,0x0B,0xBB,0x00,0x00,0x00,0x11,0x01,0x03,0x61,0x76,0x6C,
            0x5F,0x69,0x6E,0x70,0x75,0x74,0x73,0x00,0x00,0x00,0x00,0x01};


        public void ParceData()
        {
            int startIndex = 0;
            byte[] baseArray = data.ToArray();
            byte[] bufferArray = new byte[4];
            Array.Copy(baseArray, 0, bufferArray, 0, 4);
            startIndex += 4;
            double packetLength = ConvertByteArrayToValue(bufferArray);
            List<byte> byteBuffer = new List<byte>();

            for (int i = startIndex; i < baseArray.Length; i++)
            {
                if (baseArray[i] != 0)
                {
                    byteBuffer.Add(baseArray[i]);
                }
                else
                {
                    byteBuffer.Add(baseArray[i]);
                    startIndex = i + 1;
                    break;
                }
            }
            double controllerId = ConvertByteArrayToValue(byteBuffer.ToArray());


            Array.Copy(baseArray, startIndex, bufferArray, 0, 4);
            double TimeUTC = ConvertByteArrayToValue(bufferArray);
            startIndex += 4;





        }

        private double ConvertByteArrayToValue(byte[] bufferArray)
        {
            int bytePlace = bufferArray.Length - 1;
            double result = 0;
            for (int i = 0; i < bufferArray.Length; i++, bytePlace--)
            {
                result += bufferArray[i] * Math.Pow(256, bytePlace);
            }
            return result;
        }

    }
}
